# Generated by Django 4.2.21 on 2025-08-01 00:43

import datetime
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PerformanceMetric",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "metric_name",
                    models.CharField(
                        help_text="Name of the performance metric", max_length=100
                    ),
                ),
                (
                    "metric_category",
                    models.CharField(
                        choices=[
                            ("financial", "Financial"),
                            ("operational", "Operational"),
                            ("client", "Client"),
                            ("growth", "Growth"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "current_value",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="Current metric value",
                        max_digits=15,
                    ),
                ),
                (
                    "previous_value",
                    models.DecimalField(
                        decimal_places=4,
                        default=Decimal("0.0000"),
                        help_text="Previous period value for comparison",
                        max_digits=15,
                    ),
                ),
                (
                    "target_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Target value for this metric",
                        max_digits=15,
                        null=True,
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        choices=[
                            ("currency", "Currency"),
                            ("percentage", "Percentage"),
                            ("number", "Number"),
                            ("days", "Days"),
                        ],
                        default="number",
                        max_length=20,
                    ),
                ),
                (
                    "calculation_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this metric was calculated",
                    ),
                ),
                (
                    "period_start",
                    models.DateField(help_text="Start date of measurement period"),
                ),
                (
                    "period_end",
                    models.DateField(help_text="End date of measurement period"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_metrics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-calculation_date", "metric_category", "metric_name"],
                "indexes": [
                    models.Index(
                        fields=["owner", "metric_category"],
                        name="dashboard_p_owner_i_d9ea29_idx",
                    ),
                    models.Index(
                        fields=["metric_name"], name="dashboard_p_metric__ed4dc1_idx"
                    ),
                    models.Index(
                        fields=["calculation_date"],
                        name="dashboard_p_calcula_bf17a4_idx",
                    ),
                ],
                "unique_together": {
                    ("owner", "metric_name", "period_start", "period_end")
                },
            },
        ),
        migrations.CreateModel(
            name="DashboardSnapshot",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "snapshot_date",
                    models.DateField(
                        default=datetime.date.today,
                        help_text="Date this snapshot represents",
                    ),
                ),
                (
                    "period_type",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("yearly", "Yearly"),
                        ],
                        default="monthly",
                        help_text="Time period type for this snapshot",
                        max_length=20,
                    ),
                ),
                (
                    "total_revenue",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total revenue for the period",
                        max_digits=12,
                    ),
                ),
                (
                    "total_expenses",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total expenses for the period",
                        max_digits=12,
                    ),
                ),
                (
                    "net_profit",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Net profit (revenue - expenses)",
                        max_digits=12,
                    ),
                ),
                (
                    "outstanding_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total outstanding invoice amount",
                        max_digits=12,
                    ),
                ),
                (
                    "total_clients",
                    models.PositiveIntegerField(
                        default=0, help_text="Total number of active clients"
                    ),
                ),
                (
                    "new_clients",
                    models.PositiveIntegerField(
                        default=0, help_text="New clients added in this period"
                    ),
                ),
                (
                    "total_invoices",
                    models.PositiveIntegerField(
                        default=0, help_text="Total invoices created in period"
                    ),
                ),
                (
                    "total_quotes",
                    models.PositiveIntegerField(
                        default=0, help_text="Total quotes created in period"
                    ),
                ),
                (
                    "quote_conversion_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Quote to invoice conversion rate percentage",
                        max_digits=5,
                    ),
                ),
                (
                    "average_invoice_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Average invoice value for the period",
                        max_digits=10,
                    ),
                ),
                (
                    "total_expense_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Total number of expenses in period"
                    ),
                ),
                (
                    "reimbursable_expenses",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total reimbursable expenses",
                        max_digits=12,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this snapshot was created"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="When this snapshot was last updated"
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="User who owns this dashboard snapshot",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dashboard_snapshots",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-snapshot_date", "-created_at"],
                "indexes": [
                    models.Index(
                        fields=["owner", "snapshot_date"],
                        name="dashboard_d_owner_i_bfe1ea_idx",
                    ),
                    models.Index(
                        fields=["owner", "period_type"],
                        name="dashboard_d_owner_i_b337cd_idx",
                    ),
                    models.Index(
                        fields=["snapshot_date"], name="dashboard_d_snapsho_a34206_idx"
                    ),
                ],
                "unique_together": {("owner", "snapshot_date", "period_type")},
            },
        ),
        migrations.CreateModel(
            name="ClientAnalytics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("client_id", models.UUIDField(help_text="Reference to client ID")),
                (
                    "client_name",
                    models.CharField(
                        help_text="Client name for reference", max_length=200
                    ),
                ),
                ("snapshot_date", models.DateField(default=datetime.date.today)),
                (
                    "period_type",
                    models.CharField(
                        choices=[
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("yearly", "Yearly"),
                        ],
                        default="monthly",
                        max_length=20,
                    ),
                ),
                (
                    "total_revenue",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total revenue from this client",
                        max_digits=12,
                    ),
                ),
                (
                    "invoice_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of invoices for this client"
                    ),
                ),
                (
                    "quote_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of quotes for this client"
                    ),
                ),
                (
                    "outstanding_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Outstanding amount from this client",
                        max_digits=12,
                    ),
                ),
                (
                    "average_payment_days",
                    models.PositiveIntegerField(
                        default=0, help_text="Average days to payment"
                    ),
                ),
                (
                    "payment_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("100.00"),
                        help_text="Payment reliability score (0-100)",
                        max_digits=5,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether client is currently active"
                    ),
                ),
                (
                    "first_invoice_date",
                    models.DateField(
                        blank=True,
                        help_text="Date of first invoice to this client",
                        null=True,
                    ),
                ),
                (
                    "last_invoice_date",
                    models.DateField(
                        blank=True, help_text="Date of most recent invoice", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="User who owns this client analytics",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="client_analytics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-total_revenue", "client_name"],
                "indexes": [
                    models.Index(
                        fields=["owner", "is_active"],
                        name="dashboard_c_owner_i_aa9db7_idx",
                    ),
                    models.Index(
                        fields=["client_id"], name="dashboard_c_client__e6dedb_idx"
                    ),
                    models.Index(
                        fields=["snapshot_date"], name="dashboard_c_snapsho_e54629_idx"
                    ),
                    models.Index(
                        fields=["total_revenue"], name="dashboard_c_total_r_6e4efc_idx"
                    ),
                ],
                "unique_together": {
                    ("owner", "client_id", "snapshot_date", "period_type")
                },
            },
        ),
        migrations.CreateModel(
            name="CategoryAnalytics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "snapshot_date",
                    models.DateField(
                        default=datetime.date.today,
                        help_text="Date this analytics represents",
                    ),
                ),
                (
                    "period_type",
                    models.CharField(
                        choices=[
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("yearly", "Yearly"),
                        ],
                        default="monthly",
                        max_length=20,
                    ),
                ),
                (
                    "category_type",
                    models.CharField(
                        choices=[
                            ("expense", "Expense Category"),
                            ("client", "Client Category"),
                            ("service", "Service Category"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "category_name",
                    models.CharField(help_text="Name of the category", max_length=100),
                ),
                (
                    "category_display",
                    models.CharField(
                        help_text="Display name for the category", max_length=200
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total amount for this category",
                        max_digits=12,
                    ),
                ),
                (
                    "transaction_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of transactions in this category"
                    ),
                ),
                (
                    "percentage_of_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Percentage of total amount",
                        max_digits=5,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="User who owns this category analytics",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="category_analytics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-total_amount", "category_name"],
                "indexes": [
                    models.Index(
                        fields=["owner", "category_type"],
                        name="dashboard_c_owner_i_a559e3_idx",
                    ),
                    models.Index(
                        fields=["snapshot_date", "category_type"],
                        name="dashboard_c_snapsho_ff9f4e_idx",
                    ),
                ],
                "unique_together": {
                    (
                        "owner",
                        "snapshot_date",
                        "period_type",
                        "category_type",
                        "category_name",
                    )
                },
            },
        ),
    ]
